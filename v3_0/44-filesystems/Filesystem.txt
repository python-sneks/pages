Let's learn about Filesystems
Your computer is equipped with a filesystem that lets you save and load files.
A file is simply a sequence of data, not unlike a string.
You create files all the time - text documents, pictures, music, python files, and so on.
These files are organized by your File System.
Directories, also known as folders, are a way to group files and other directories together.
Because we can put directories inside of directories, we end up with a 
heirarchical
 system.
Think of files as a house.
Directories are neighborhoods, cities, states, and successively bigger ways to group houses.
Each file has a unique address within your file system called its "path".
We use these paths to navigate files and directories, just like we would houses and neighborhoods.
The full address for a file is known as its "absolute path".
The exact format of the path will depend on your platform, but typically they are a series of folder names separated by slashes. 
In Python, it is typically best to use forward slashes, since these tend to work regardless of the platform.
Command lines that interact with file systems have a Current Working Directory.
It's essentially "where you are" at the moment.
In 
IPython
, you can check your current directory using the "
pwd
" command.
PWD stands for Print Working Directory.
If there are folders in your current working directory, you can reference them without writing the Absolute path.
Instead, the folder's path is simply it's name.
You can see a list of the folders in your current directory by using the "ls" command.
LS stands for "list", as in "list the files".
To move from one directory to another, we use the "cd" command.
You can move to an absolute path or a relative path.
You can also move up a folder level by using a pair of periods.
It can be tricky to remember these commands, but knowing how to use them will serve you well when you start working on larger projects.
